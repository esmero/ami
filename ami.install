<?php
/**
 * @file
 * Contains install and update functions for AMI.
 */

use Drupal\Core\Language\LanguageInterface;
use Drupal\taxonomy\Entity\Vocabulary;
use Drupal\taxonomy\Entity\Term;
use Drupal\field\Entity\FieldStorageConfig;
use Drupal\field\Entity\FieldConfig;
use Drupal\Component\Utility\Environment;
use Drupal\Core\Field\BaseFieldDefinition;
use Drupal\Core\StringTranslation\TranslatableMarkup;
use Drupal\Core\Database\Database;
use Drupal\Core\Config\Entity\ConfigEntityType;


/**
 * Implements hook_install().
 */

function ami_install() {

}

/**
 * Update 8901 - Create AMI Set entity.
 */
function ami_update_8901() {
  // Code provided by @giancarloby to allow D9 compat.
  $schema = Database::getConnection()->schema();
  if (!$schema->tableExists('ami_setentity')) {
    \Drupal::entityTypeManager()->clearCachedDefinitions();
    \Drupal::entityDefinitionUpdateManager()
      ->installEntityType(\Drupal::entityTypeManager()->getDefinition('ami_set_entity'));
  }
  else {
    return 'AMI Set entity already exists';
  }
}

/**
 * Update 8902 - Add ZIP file Field for AMI Set entity.
 */
function ami_update_8902() {
  $validators = [
      'file_validate_extensions' => ['zip'],
      'file_validate_size' => [Environment::getUploadMaxSize()],
    ];
  $storage_definition = BaseFieldDefinition::create('file')
    ->setLabel(new TranslatableMarkup('Attached ZIP file'))
    ->setDescription(new TranslatableMarkup('A Zip file containing accompanying Files for the Source Data'))
    ->setSetting('file_extensions', 'zip')
    ->setSetting('upload_validators', $validators)
    ->setSetting('uri_scheme', 'private')
    ->setSetting('file_directory', '/ami/zip')
    ->setRequired(FALSE)
    ->setDisplayOptions('view', [
      'label' => 'above',
      'type' => 'file',
      'weight' => -3,
    ])
    ->setDisplayOptions('form', [
      'type' => 'file',
      'description' => [
      'theme' => 'file_upload_help',
      'description' => new TranslatableMarkup('Source Files for this Set')
      ],
      'settings' => [
        'upload_validators' => $validators,
      ],
      'weight' => -3,
    ])
    ->setDisplayConfigurable('view', TRUE)
    ->setDisplayConfigurable('form', TRUE);

  \Drupal::entityDefinitionUpdateManager()->installFieldStorageDefinition('zip_file', 'ami_set_entity', 'ami', $storage_definition);
}

/**
 * Update 8903 - Install Importer Adapter Config Entity.
 */
function ami_update_8903() {
  \Drupal::entityDefinitionUpdateManager()->installEntityType(new ConfigEntityType([
     'id' => 'importeradapter',
     'label' => new TranslatableMarkup('AMI Importer Adapter'),
     'config_prefix' => 'importeradapter',
     'admin_permission' => 'administer site configuration',
     'entity_keys' => [
       'id' => 'id',
       'label' => 'label',
       'uuid' => 'uuid',
     ],
     'config_export' => [
        "id",
        "label",
        "plugin",
        "update_existing",
        "target_entity_types",
        "active",
        "plugin_configuration"
     ],
   ]));
}

/**
 * Update 8903 - Make Private default upload location for ami Set ZIP files.
 */
function ami_update_8904() {
  $field_storage_definition = \Drupal::entityDefinitionUpdateManager()->getFieldStorageDefinition('zip_file', 'ami_set_entity');
  $field_storage_definition->setSetting('uri_scheme', 'private');
  $field_storage_definition->setSetting('file_directory', '/ami/zip');
  \Drupal::entityDefinitionUpdateManager()->updateFieldStorageDefinition($field_storage_definition);
}

/**
 * Update 8905 - Add Report CSV file Field for AMI Set entity.
 */
function ami_update_8905() {
  $validators = [
      'file_validate_extensions' => ['csv'],
      'file_validate_size' => [Environment::getUploadMaxSize()],
    ];

  $storage_definition = BaseFieldDefinition::create('file')
       ->setLabel(t('AMI Process Reports'))
       ->setDescription(t('Processed set report in CSV format'))
       ->setSetting('file_extensions', 'csv')
       ->setSetting('upload_validators', $validators)
       ->setSetting('uri_scheme', 'private')
       ->setSetting('file_directory', '/ami/reports')
       ->setRequired(FALSE)
       ->setDisplayOptions('view', [
         'label' => 'above',
         'type' => 'file',
         'weight' => -2,
       ])
       ->setDisplayConfigurable('view', TRUE)
       ->setDisplayConfigurable('form', TRUE);
  \Drupal::entityDefinitionUpdateManager()->installFieldStorageDefinition('report_file', 'ami_set_entity', 'ami', $storage_definition);
}


